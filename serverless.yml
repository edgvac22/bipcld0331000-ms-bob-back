service: bipcld0331000-ms-bob-back

plugins:
  - serverless-iam-roles-per-function
# - serverless-offline
  - serverless-prune-plugin

custom:
  prune:
    automatic: true
    number: 3

configValidationMode: warn

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage}
  region: ${opt:region}
  timeout: 30
  deploymentBucket:
    name: aws${opt:geoloc,'useast1'}-${opt:stage}${opt:proyecto,'ingsw'}serverless
  environment:
    BOB_TABLE: aws${opt:geoloc,'useast1'}-${opt:stage}${opt:acct,'cpi'}dbo${opt:proyecto,'ingsw'}-bob
    ENVIRONMENT_AREA_TABLE: aws${opt:geoloc,'useast1'}-${opt:stage}${opt:acct,'cpi'}dbo${opt:proyecto,'ingsw'}-environment-area
  apiGateway:
    apiKeys:
      - ${opt:proyecto,'ingsw'}-${opt:stage}-api-key

functions:
  create-issue: 
    description: Issue Creation Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.BOB_TABLE}'
    events:
      - http:
          method: post
          path: /issue/new
          cors:
            methods: 
              - POST
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  create-area: 
    description: Area Creation Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.ENVIRONMENT_AREA_TABLE}'
    events:
      - http:
          method: post
          path: /area/new
          cors:
            methods: 
              - POST
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  create-environment: 
    description: Environment Creation Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.ENVIRONMENT_AREA_TABLE}'
    events:
      - http:
          method: post
          path: /environment/new
          cors:
            methods: 
              - POST
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  create-solution:
    description: Solution Creation Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.BOB_TABLE}'
    events:
      - http:
          method: post
          path: /solution/new/{issueId}
          cors:
            methods: 
              - POST
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  update-solution:
    description: Solution Modification Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.BOB_TABLE}'
    events:
      - http:
          method: post
          path: /solution/update/{issueId}
          cors:
            methods: 
              - POST
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  remove-solution:
    description: Solution Removal Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.BOB_TABLE}'
    events:
      - http:
          method: post
          path: /solution/remove/{issueId}
          cors:
            methods: 
              - POST
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  list-issue: 
    description: Issue Listing Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.BOB_TABLE}/index/verify-index'
    events:
      - http:
          method: get
          path: /issue/list
          cors:
            methods: 
              - GET
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  list-solution: 
    description: Solution Listing Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.BOB_TABLE}/index/verify-index'
    events:
      - http:
          method: get
          path: /solution/list
          cors:
            methods: 
              - GET
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  detail-solution: 
    description: Detail Orchestrator of a Solution
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.BOB_TABLE}/index/solutionId-index'
    events:
      - http:
          method: get
          path: /solution/{solutionId}
          cors:
            methods: 
              - GET
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  list-area: 
    description: Area Listing Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.ENVIRONMENT_AREA_TABLE}/index/type-index'
    events:
      - http:
          method: get
          path: /area/list
          cors:
            methods: 
              - GET
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  list-environment: 
    description: Environment Listing Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.ENVIRONMENT_AREA_TABLE}/index/type-index'
    events:
      - http:
          method: get
          path: /environment/list
          cors:
            methods: 
              - GET
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  detail-issue: 
    description: Detail Orchestrator of an Issue
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.BOB_TABLE}'
    events:
      - http:
          method: get
          path: /issue/{issueId}
          cors:
            methods: 
              - GET
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  obtain-issue-images: 
    description: Image Issue Fetch Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "s3:ListBucket"
          - "s3:GetObject"
        Resource:
          - "arn:aws:s3:::plantilla-s3-prueba-ingsw"
          - "arn:aws:s3:::plantilla-s3-prueba-ingsw/*"
    events:
      - http:
          method: get
          path: /issue/image/{fileId}
          cors:
            methods: 
              - GET
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  obtain-solution-images: 
    description: Image Solution Fetch Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "s3:ListBucket"
          - "s3:GetObject"
        Resource:
          - "arn:aws:s3:::plantilla-s3-prueba-ingsw"
          - "arn:aws:s3:::plantilla-s3-prueba-ingsw/*"
    events:
      - http:
          method: get
          path: /solution/image/{issueId}
          cors:
            methods: 
              - GET
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  count-solution-images: 
    description: Solution Count Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "s3:ListBucket"
          - "s3:GetObject"
        Resource:
          - "arn:aws:s3:::plantilla-s3-prueba-ingsw"
          - "arn:aws:s3:::plantilla-s3-prueba-ingsw/*"
    events:
      - http:
          method: get
          path: /solution/count/{issueId}
          cors:
            methods: 
              - GET
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  upload-issue-images: 
    description: Issue Upload Images Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "s3:PutObject"
          - "s3:PutObjectAcl"
        Resource:
          - "arn:aws:s3:::plantilla-s3-prueba-ingsw"
          - "arn:aws:s3:::plantilla-s3-prueba-ingsw/*"
    events:
      - http:
          method: post
          path: /issue/file
          cors:
            methods: 
              - POST
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  upload-solution-images: 
    description: Solution Upload Images Orchestrator
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "s3:PutObject"
          - "s3:PutObjectAcl"
        Resource:
          - "arn:aws:s3:::plantilla-s3-prueba-ingsw"
          - "arn:aws:s3:::plantilla-s3-prueba-ingsw/*"
    events:
      - http:
          method: post
          path: /solution/file/{issueId}
          cors:
            methods: 
              - POST
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy