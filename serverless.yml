service: ingsw-bob-api-rest

plugins:
  - serverless-iam-roles-per-function
# - serverless-offline
  - serverless-prune-plugin

custom:
  prune:
    automatic: true
    number: 3

configValidationMode: warn

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage}
  region: ${opt:region}
  timeout: 30
  deploymentBucket:
    name: aws${opt:geoloc,'useast1'}-${opt:stage}${opt:proyecto,'ingsw'}serverless
  environment:
    BOB_TABLE: aws${opt:geoloc,'useast1'}-${opt:stage}${opt:acct,'cpi'}dbo${opt:proyecto,'ingsw'}-bob
  apiGateway:
    apiKeys:
      - ${opt:proyecto,'ingsw'}-${opt:stage}-api-key

functions:
  putItem: 
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.BOB_TABLE}'
    events:
      - http:
          method: post
          path: /issue/new
          cors:
            methods: 
              - POST
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  updateItem:
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.BOB_TABLE}'
    events:
      - http:
          method: post
          path: /solution/new/{issueId}
          cors:
            methods: 
              - POST
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy
      - http:
          method: post
          path: /solution/update/{issueId}
          cors:
            methods: 
              - POST
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy
      - http:
          method: post
          path: /solution/remove/{issueId}
          cors:
            methods: 
              - POST
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy

  queryItem: 
    handler: dist/serverless.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: 'arn:aws:dynamodb:${opt:region}:*:table/${self:provider.environment.BOB_TABLE}'
    events:
      - http:
          method: get
          path: /issue/list
          cors:
            methods: 
              - GET
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy
      - http:
          method: get
          path: /solution/list
          cors:
            methods: 
              - GET
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy
      - http:
          method: get
          path: /solution/{solutionId}
          cors:
            methods: 
              - GET
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy
      - http:
          method: post
          path: /issue
          cors:
            methods: 
              - POST
              - OPTIONS
            headers:
              - Content-Type
              - Authorization
              - X-Amzn-Trace-Id
          integration: lambda-proxy